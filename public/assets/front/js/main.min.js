new Sortable(pending, {
    group: 'shared',
    animation: 150,
    onEnd: function (event) {
        var target = event.to.id;
        var targetStatus = document.getElementById(target).dataset.status;
        var url = event.item.dataset.action;

        makeRequest(url, targetStatus);
    }
});

new Sortable(done, {
    group: 'shared',
    animation: 150,
    onEnd: function (event) {
        var target = event.to.id;
        var targetStatus = document.getElementById(target).dataset.status;
        var url = event.item.dataset.action;

        makeRequest(url, targetStatus);
    }
});

new Sortable(rejected, {
    group: 'shared',
    animation: 150,
    onEnd: function (event) {
        var target = event.to.id;
        var targetStatus = document.getElementById(target).dataset.status;
        var url = event.item.dataset.action;
        
        makeRequest(url, targetStatus);
    }
});

function makeRequest(url, status) {
    var httpRequest = false;
    
    if (window.XMLHttpRequest) { // Mozilla, Safari, ...
        httpRequest = new XMLHttpRequest();
        if (httpRequest.overrideMimeType) {
            httpRequest.overrideMimeType('text/xml');
        }
    } else if (window.ActiveXObject) { // IE
        try {
            httpRequest = new ActiveXObject("Msxml2.XMLHTTP");
        } catch (e) {
            try {
                httpRequest = new ActiveXObject("Microsoft.XMLHTTP");
            } catch (e) {
            }
        }
    }
    
    if (!httpRequest) {
        alert('Error');
        return false;
    }
    
    httpRequest.open('POST', url, true);
    httpRequest.send(JSON.stringify({
        status: status
    }));
}

function alertContents(httpRequest) {
    if (httpRequest.readyState === 4) {
        if (httpRequest.status === 200) {
            alert(httpRequest.responseText);
        } else {
            alert('Error');
        }
    }
}